name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install libs
        run: sudo apt-get update; sudo apt-get install --no-install-recommends g++ pkg-config libx11-dev libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev libssl-dev
        if: runner.os == 'linux'
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: whist-browser
      - name: Build tests
        run: cargo test --all-targets --all-features --no-run --locked
      - name: Run tests
        run: cargo test --all-targets --all-features -- --nocapture
  all-doc-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install libs
        run: sudo apt-get update; sudo apt-get install --no-install-recommends g++ pkg-config libx11-dev libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev libssl-dev
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: whist-browser
      - name: Run doc tests with all features (this also compiles README examples)
        run: cargo test --doc --all-features
  check-cross:
    strategy:
      matrix:
        target: [ wasm32-unknown-unknown ]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install libs
        run: sudo apt-get update; sudo apt-get install --no-install-recommends g++ pkg-config libx11-dev libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev libssl-dev
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: whist-browser
      - name: Check
        run: cargo check --target ${{ matrix.target }} --all-features
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install libs
        run: sudo apt-get update; sudo apt-get install --no-install-recommends g++ pkg-config libx11-dev libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev libssl-dev
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: whist-browser
      - name: Check format
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
  end-to-end:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install libs
        run: sudo apt-get update; sudo apt-get install --no-install-recommends g++ pkg-config libx11-dev libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev libssl-dev
      - name: Update pip
        run: |
          pip install -U pip
          pip --version
          python --version
      - name: Install Whist Server
        run: pip install -r .github/workflows/end_to_end_requirements.txt
      - name: Start Whist Server
        run: python -m whist_server --admin_name=root --admin_pwd=password 0.0.0.0 8080
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: whist-browser
      - name: Run end-to-end tests
        run: cargo test --test end_to_end_test
